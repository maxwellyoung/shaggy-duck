"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = require("@sanity/color");
var ui_1 = require("@sanity/ui");
var react_1 = __importDefault(require("react"));
var react_dropzone_1 = require("react-dropzone");
var react_redux_1 = require("react-redux");
var styled_components_1 = __importDefault(require("styled-components"));
var AssetSourceDispatchContext_1 = require("../../contexts/AssetSourceDispatchContext");
var DropzoneDispatchContext_1 = require("../../contexts/DropzoneDispatchContext");
var useTypedSelector_1 = __importDefault(require("../../hooks/useTypedSelector"));
var notifications_1 = require("../../modules/notifications");
var uploads_1 = require("../../modules/uploads");
var UploadContainer = styled_components_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  color: white;\n  height: 100%;\n  min-height: 100%;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n\n  &:focus {\n    outline: none;\n  }\n"], ["\n  color: white;\n  height: 100%;\n  min-height: 100%;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n\n  &:focus {\n    outline: none;\n  }\n"])));
var DragActiveContainer = styled_components_1.default.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  align-items: center;\n  background: rgba(0, 0, 0, 0.75);\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n  z-index: 3;\n"], ["\n  align-items: center;\n  background: rgba(0, 0, 0, 0.75);\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n  z-index: 3;\n"
    // Iterate through all files and only return non-folders / packages.
    // We check for files by reading the first byte of the file
])));
// Iterate through all files and only return non-folders / packages.
// We check for files by reading the first byte of the file
function filterFiles(fileList) {
    return __awaiter(this, void 0, void 0, function () {
        var files, filteredFiles, files_1, files_1_1, file, err_1, e_1_1;
        var e_1, _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    files = Array.from(fileList);
                    filteredFiles = [];
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 8, 9, 10]);
                    files_1 = __values(files), files_1_1 = files_1.next();
                    _b.label = 2;
                case 2:
                    if (!!files_1_1.done) return [3 /*break*/, 7];
                    file = files_1_1.value;
                    _b.label = 3;
                case 3:
                    _b.trys.push([3, 5, , 6]);
                    return [4 /*yield*/, file.slice(0, 1).arrayBuffer()];
                case 4:
                    _b.sent();
                    filteredFiles.push(file);
                    return [3 /*break*/, 6];
                case 5:
                    err_1 = _b.sent();
                    return [3 /*break*/, 6];
                case 6:
                    files_1_1 = files_1.next();
                    return [3 /*break*/, 2];
                case 7: return [3 /*break*/, 10];
                case 8:
                    e_1_1 = _b.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 10];
                case 9:
                    try {
                        if (files_1_1 && !files_1_1.done && (_a = files_1.return)) _a.call(files_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 10: return [2 /*return*/, filteredFiles];
            }
        });
    });
}
var UploadDropzone = function (props) {
    var children = props.children;
    var onSelect = AssetSourceDispatchContext_1.useAssetSourceActions().onSelect;
    // Redux
    var dispatch = react_redux_1.useDispatch();
    var assetTypes = useTypedSelector_1.default(function (state) { return state.assets.assetTypes; });
    var isImageAssetType = assetTypes.length === 1 && assetTypes[0] === 'image';
    // Callbacks
    var handleDrop = function (acceptedFiles) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            acceptedFiles.forEach(function (file) {
                return dispatch(uploads_1.uploadsActions.uploadRequest({
                    file: file,
                    forceAsAssetType: assetTypes.length === 1 ? assetTypes[0] : undefined
                }));
            });
            return [2 /*return*/];
        });
    }); };
    // Use custom file selector to obtain files on file drop + change events (excluding folders and packages)
    var handleFileGetter = function (event) { return __awaiter(void 0, void 0, void 0, function () {
        var fileList, target, files;
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    if (event.type === 'drop' && 'dataTransfer' in event) {
                        fileList = (_a = event === null || event === void 0 ? void 0 : event.dataTransfer) === null || _a === void 0 ? void 0 : _a.files;
                    }
                    if (event.type === 'change') {
                        target = event === null || event === void 0 ? void 0 : event.target;
                        if (target === null || target === void 0 ? void 0 : target.files) {
                            fileList = target.files;
                        }
                    }
                    if (!fileList) {
                        return [2 /*return*/, []];
                    }
                    return [4 /*yield*/, filterFiles(fileList)
                        // Dispatch error if some files have been filtered out
                    ];
                case 1:
                    files = _b.sent();
                    // Dispatch error if some files have been filtered out
                    if ((fileList === null || fileList === void 0 ? void 0 : fileList.length) !== files.length) {
                        dispatch(notifications_1.notificationsActions.add({
                            status: 'error',
                            title: "Unable to upload some items (folders and packages aren't supported)"
                        }));
                    }
                    return [2 /*return*/, files];
            }
        });
    }); };
    // Limit file picking to only images if we're specifically within an image selection context (e.g. picking from image fields)
    var _a = react_dropzone_1.useDropzone({
        accept: isImageAssetType ? 'image/*' : '',
        getFilesFromEvent: handleFileGetter,
        noClick: true,
        // HACK: Disable drag and drop functionality when in a selecting context
        // (This is currently due to Sanity's native image input taking precedence with drag and drop)
        noDrag: !!onSelect,
        onDrop: handleDrop
    }), getRootProps = _a.getRootProps, getInputProps = _a.getInputProps, isDragActive = _a.isDragActive, open = _a.open;
    return (react_1.default.createElement(DropzoneDispatchContext_1.DropzoneDispatchProvider, { open: open },
        react_1.default.createElement(UploadContainer, __assign({}, getRootProps()),
            react_1.default.createElement("input", __assign({}, getInputProps())),
            isDragActive && (react_1.default.createElement(DragActiveContainer, null,
                react_1.default.createElement(ui_1.Flex, { direction: "column", justify: "center", style: { color: color_1.white.hex } },
                    react_1.default.createElement(ui_1.Text, { size: 3, style: { color: 'inherit' } }, "Drop files to upload")))),
            children)));
};
exports.default = UploadDropzone;
var templateObject_1, templateObject_2;
//# sourceMappingURL=index.js.map