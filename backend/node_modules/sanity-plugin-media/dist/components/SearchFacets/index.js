"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var ui_1 = require("@sanity/ui");
var react_1 = __importDefault(require("react"));
var styled_components_1 = __importDefault(require("styled-components"));
var useTypedSelector_1 = __importDefault(require("../../hooks/useTypedSelector"));
var SearchFacetNumber_1 = __importDefault(require("../SearchFacetNumber"));
var SearchFacetTags_1 = __importDefault(require("../SearchFacetTags"));
var SearchFacetSelect_1 = __importDefault(require("../SearchFacetSelect"));
var SearchFacetString_1 = __importDefault(require("../SearchFacetString"));
var StackContainer = styled_components_1.default(ui_1.Flex)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  > * {\n    margin-bottom: ", "px;\n  }\n"], ["\n  > * {\n    margin-bottom: ", "px;\n  }\n"])), function (props) { return props.theme.sanity.space[2]; });
var SearchFacets = function (props) {
    var _a = props.layout, layout = _a === void 0 ? 'inline' : _a;
    // Redux
    var searchFacets = useTypedSelector_1.default(function (state) { return state.search.facets; });
    var Items = searchFacets.map(function (facet) {
        if (facet.type === 'number') {
            return react_1.default.createElement(SearchFacetNumber_1.default, { facet: facet, key: facet.name });
        }
        if (facet.type === 'searchable') {
            return react_1.default.createElement(SearchFacetTags_1.default, { facet: facet, key: facet.name });
        }
        if (facet.type === 'select') {
            return react_1.default.createElement(SearchFacetSelect_1.default, { facet: facet, key: facet.name });
        }
        if (facet.type === 'string') {
            return react_1.default.createElement(SearchFacetString_1.default, { facet: facet, key: facet.name });
        }
        return null;
    });
    if (layout === 'inline') {
        if (searchFacets.length === 0) {
            return null;
        }
        return (react_1.default.createElement(ui_1.Box, { marginBottom: 2 },
            react_1.default.createElement(ui_1.Inline, { space: 2 }, Items)));
    }
    if (layout === 'stack') {
        return (react_1.default.createElement(StackContainer, { align: "flex-start", direction: "column" }, Items));
    }
    throw Error('Invalid layout');
};
exports.default = SearchFacets;
var templateObject_1;
//# sourceMappingURL=index.js.map