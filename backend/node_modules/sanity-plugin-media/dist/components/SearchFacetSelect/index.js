"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var icons_1 = require("@sanity/icons");
var ui_1 = require("@sanity/ui");
var react_1 = __importDefault(require("react"));
var react_redux_1 = require("react-redux");
var searchFacets_1 = require("../../config/searchFacets");
var search_1 = require("../../modules/search");
var SearchFacet_1 = __importDefault(require("../SearchFacet"));
var SearchFacetSelect = function (props) {
    var _a;
    var facet = props.facet;
    // Redux
    var dispatch = react_redux_1.useDispatch();
    var options = facet === null || facet === void 0 ? void 0 : facet.options;
    var selectedItem = options === null || options === void 0 ? void 0 : options.find(function (v) { return v.name === (facet === null || facet === void 0 ? void 0 : facet.value); });
    var handleListItemClick = function (option) {
        dispatch(search_1.searchActions.facetsUpdate({ name: facet.name, value: option.name }));
    };
    var handleOperatorItemClick = function (operatorType) {
        dispatch(search_1.searchActions.facetsUpdate({ name: facet.name, operatorType: operatorType }));
    };
    var selectedOperatorType = (_a = facet === null || facet === void 0 ? void 0 : facet.operatorType) !== null && _a !== void 0 ? _a : 'is';
    return (react_1.default.createElement(SearchFacet_1.default, { facet: facet },
        (facet === null || facet === void 0 ? void 0 : facet.operatorTypes) && (react_1.default.createElement(ui_1.MenuButton, { button: react_1.default.createElement(ui_1.Button, { fontSize: 1, iconRight: icons_1.SelectIcon, padding: 2, style: {
                    marginRight: '4px'
                }, text: searchFacets_1.operators[selectedOperatorType].label }), id: "operators", menu: react_1.default.createElement(ui_1.Menu, null, facet.operatorTypes.map(function (operatorType, index) {
                if (operatorType) {
                    return (react_1.default.createElement(ui_1.MenuItem, { disabled: operatorType === selectedOperatorType, fontSize: 1, key: operatorType, onClick: function () { return handleOperatorItemClick(operatorType); }, padding: 2, text: searchFacets_1.operators[operatorType].label }));
                }
                return react_1.default.createElement(ui_1.MenuDivider, { key: index });
            })) })),
        react_1.default.createElement(ui_1.MenuButton, { button: react_1.default.createElement(ui_1.Button, { fontSize: 1, iconRight: icons_1.SelectIcon, padding: 2, text: selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.title }), id: "list", menu: react_1.default.createElement(ui_1.Menu, null, options === null || options === void 0 ? void 0 : options.map(function (item, index) { return (react_1.default.createElement(ui_1.MenuItem, { disabled: item.name === (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.name), fontSize: 1, key: item.name, onClick: function () { return handleListItemClick(options[index]); }, padding: 2, text: item.title })); })) })));
};
exports.default = SearchFacetSelect;
//# sourceMappingURL=index.js.map