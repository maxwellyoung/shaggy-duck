"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = require("@sanity/color");
var ui_1 = require("@sanity/ui");
var react_1 = __importDefault(require("react"));
var react_redux_1 = require("react-redux");
var theme_ui_1 = require("theme-ui");
var useTypedSelector_1 = __importDefault(require("../../hooks/useTypedSelector"));
var dialog_1 = require("../../modules/dialog");
var tags_1 = require("../../modules/tags");
var ButtonViewGroup_1 = __importDefault(require("../ButtonViewGroup"));
var OrderSelect_1 = __importDefault(require("../OrderSelect"));
var Progress_1 = __importDefault(require("../Progress"));
var SearchFacets_1 = __importDefault(require("../SearchFacets"));
var SearchFacetsControl_1 = __importDefault(require("../SearchFacetsControl"));
var TagIcon_1 = __importDefault(require("../TagIcon"));
var TextInputSearch_1 = __importDefault(require("../TextInputSearch"));
var Controls = function () {
    var _a;
    // Redux
    var dispatch = react_redux_1.useDispatch();
    var fetching = useTypedSelector_1.default(function (state) { return state.assets.fetching; });
    var pageIndex = useTypedSelector_1.default(function (state) { return state.assets.pageIndex; });
    var searchFacets = useTypedSelector_1.default(function (state) { return state.search.facets; });
    var tagsPanelVisible = useTypedSelector_1.default(function (state) { return state.tags.panelVisible; });
    // Callbacks
    var handleShowSearchFacetDialog = function () {
        dispatch(dialog_1.dialogActions.showSearchFacets());
    };
    var handleShowTagsDialog = function () {
        dispatch(dialog_1.dialogActions.showTags());
    };
    var toggleTagsPanelToggle = function () {
        dispatch(tags_1.tagsActions.panelVisibleSet({ panelVisible: !tagsPanelVisible }));
    };
    return (react_1.default.createElement(ui_1.Box, { paddingY: 2, style: {
            borderBottom: "1px solid " + ((_a = color_1.hues.gray) === null || _a === void 0 ? void 0 : _a[900].hex),
            zIndex: 2
        } },
        react_1.default.createElement(ui_1.Box, { marginBottom: 2 },
            react_1.default.createElement(ui_1.Flex, { align: "flex-start", direction: ['column', 'column', 'column', 'column', 'row'], justify: "space-between" },
                react_1.default.createElement(theme_ui_1.Flex, { sx: {
                        alignItems: 'flex-start',
                        flex: 1,
                        height: '100%',
                        justifyContent: ['space-between', null, 'flex-start'],
                        position: 'relative',
                        width: '100%'
                    } },
                    react_1.default.createElement(ui_1.Box, { marginX: 2, style: { minWidth: '200px' } },
                        react_1.default.createElement(TextInputSearch_1.default, null)),
                    react_1.default.createElement(ui_1.Box, { display: ['none', 'none', 'block'] },
                        react_1.default.createElement(SearchFacets_1.default, null),
                        react_1.default.createElement(SearchFacetsControl_1.default, null)),
                    react_1.default.createElement(ui_1.Box, { display: ['block', 'block', 'none'], marginX: 2 },
                        react_1.default.createElement(ui_1.Inline, { space: 2, style: { whiteSpace: 'nowrap' } },
                            react_1.default.createElement(ui_1.Button, { fontSize: 1, mode: "ghost", onClick: handleShowSearchFacetDialog, text: "Filters" + (searchFacets.length > 0 ? " (" + searchFacets.length + ")" : ''), tone: "primary" }),
                            react_1.default.createElement(ui_1.Button, { fontSize: 1, mode: "ghost", onClick: handleShowTagsDialog, text: "Tags", tone: "primary" })))))),
        react_1.default.createElement(ui_1.Box, null,
            react_1.default.createElement(ui_1.Flex, { align: "center", justify: ['space-between'] },
                react_1.default.createElement(ui_1.Box, { marginX: 2 },
                    react_1.default.createElement(ButtonViewGroup_1.default, null)),
                react_1.default.createElement(ui_1.Flex, { marginX: 2 },
                    react_1.default.createElement(OrderSelect_1.default, null),
                    react_1.default.createElement(ui_1.Box, { display: ['none', 'none', 'block'], marginLeft: 2 },
                        react_1.default.createElement(ui_1.Button, { fontSize: 1, icon: react_1.default.createElement(ui_1.Box, { style: { transform: 'scale(0.75)' } },
                                react_1.default.createElement(TagIcon_1.default, null)), onClick: toggleTagsPanelToggle, mode: tagsPanelVisible ? 'default' : 'ghost', text: tagsPanelVisible ? 'Tags' : '' }))))),
        react_1.default.createElement(Progress_1.default, { key: pageIndex, loading: fetching })));
};
exports.default = Controls;
//# sourceMappingURL=index.js.map