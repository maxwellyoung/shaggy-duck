"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var ui_1 = require("@sanity/ui");
var react_1 = __importStar(require("react"));
var react_redux_1 = require("react-redux");
var useBreakpointIndex_1 = __importDefault(require("../../hooks/useBreakpointIndex"));
var useTypedSelector_1 = __importDefault(require("../../hooks/useTypedSelector"));
var assets_1 = require("../../modules/assets");
var selectors_1 = require("../../modules/selectors");
var tags_1 = require("../../modules/tags");
var AssetGridVirtualized_1 = __importDefault(require("../AssetGridVirtualized"));
var AssetTableVirtualized_1 = __importDefault(require("../AssetTableVirtualized"));
var Items = function () {
    // Redux
    var dispatch = react_redux_1.useDispatch();
    var fetchCount = useTypedSelector_1.default(function (state) { return state.assets.fetchCount; });
    var fetching = useTypedSelector_1.default(function (state) { return state.assets.fetching; });
    var tagsPanelVisible = useTypedSelector_1.default(function (state) { return state.tags.panelVisible; });
    var view = useTypedSelector_1.default(function (state) { return state.assets.view; });
    var combinedItems = useTypedSelector_1.default(selectors_1.selectCombinedItems);
    var breakpointIndex = useBreakpointIndex_1.default();
    var hasFetchedOnce = fetchCount >= 0;
    var hasItems = combinedItems.length > 0;
    // Only load 1 page of items at a time.
    var handleLoadMoreItems = function () {
        if (!fetching) {
            dispatch(assets_1.assetsActions.loadNextPage());
        }
    };
    // Effects
    // - Hide tag panel on smaller breakpoints
    react_1.useEffect(function () {
        if (breakpointIndex <= 1 && tagsPanelVisible) {
            dispatch(tags_1.tagsActions.panelVisibleSet({ panelVisible: false }));
        }
    }, [breakpointIndex]);
    var isEmpty = !hasItems && hasFetchedOnce && !fetching;
    return (react_1.default.createElement(ui_1.Box, { flex: 1, style: { width: '100%' } }, isEmpty ? (react_1.default.createElement(ui_1.Box, { padding: 4 },
        react_1.default.createElement(ui_1.Text, { size: 1, weight: "semibold" }, "No results for the current query"))) : (react_1.default.createElement(react_1.default.Fragment, null,
        view === 'grid' && (react_1.default.createElement(AssetGridVirtualized_1.default, { items: combinedItems, onLoadMore: handleLoadMoreItems })),
        view === 'table' && (react_1.default.createElement(AssetTableVirtualized_1.default, { items: combinedItems, onLoadMore: handleLoadMoreItems }))))));
};
exports.default = Items;
//# sourceMappingURL=index.js.map