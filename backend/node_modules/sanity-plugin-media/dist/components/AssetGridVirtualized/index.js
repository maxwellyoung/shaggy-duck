"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var react_virtuoso_1 = require("react-virtuoso");
var styled_components_1 = __importDefault(require("styled-components"));
var useTypedSelector_1 = __importDefault(require("../../hooks/useTypedSelector"));
var CardAsset_1 = __importDefault(require("../CardAsset"));
var CardUpload_1 = __importDefault(require("../CardUpload"));
var CARD_HEIGHT = 220;
var CARD_WIDTH = 240;
var VirtualCell = react_1.memo(function (_a) {
    var item = _a.item, selected = _a.selected;
    if ((item === null || item === void 0 ? void 0 : item.type) === 'asset') {
        return react_1.default.createElement(CardAsset_1.default, { id: item.id, selected: selected });
    }
    if ((item === null || item === void 0 ? void 0 : item.type) === 'upload') {
        return react_1.default.createElement(CardUpload_1.default, { id: item.id });
    }
    return null;
});
var ItemContainer = styled_components_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  height: ", "px;\n  width: ", "px;\n"], ["\n  height: ", "px;\n  width: ", "px;\n"])), CARD_HEIGHT, CARD_WIDTH);
var ListContainer = styled_components_1.default.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  display: grid;\n  grid-template-columns: repeat(auto-fill, ", "px);\n  justify-content: center;\n  margin: 0 auto;\n"], ["\n  display: grid;\n  grid-template-columns: repeat(auto-fill, ", "px);\n  justify-content: center;\n  margin: 0 auto;\n"])), CARD_WIDTH);
var AssetGridVirtualized = function (props) {
    var items = props.items, onLoadMore = props.onLoadMore;
    // Redux
    var selectedAssets = useTypedSelector_1.default(function (state) { return state.selected.assets; });
    var selectedIds = (selectedAssets && selectedAssets.map(function (asset) { return asset._id; })) || [];
    var totalCount = items === null || items === void 0 ? void 0 : items.length;
    if (totalCount === 0) {
        return null;
    }
    return (react_1.default.createElement(react_virtuoso_1.VirtuosoGrid, { className: "media__custom-scrollbar", computeItemKey: function (index) {
            var item = items[index];
            return item === null || item === void 0 ? void 0 : item.id;
        }, components: {
            Item: ItemContainer,
            List: ListContainer
        }, endReached: onLoadMore, itemContent: function (index) {
            var item = items[index];
            var selected = selectedIds.includes(item === null || item === void 0 ? void 0 : item.id);
            return react_1.default.createElement(VirtualCell, { item: item, selected: selected });
        }, overscan: 48, totalCount: totalCount }));
};
exports.default = AssetGridVirtualized;
var templateObject_1, templateObject_2;
//# sourceMappingURL=index.js.map