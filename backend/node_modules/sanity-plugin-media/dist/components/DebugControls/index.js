"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var icons_1 = require("@sanity/icons");
var ui_1 = require("@sanity/ui");
var react_1 = __importDefault(require("react"));
var react_redux_1 = require("react-redux");
var useKeyPress_1 = __importDefault(require("../../hooks/useKeyPress"));
var useTypedSelector_1 = __importDefault(require("../../hooks/useTypedSelector"));
var debug_1 = require("../../modules/debug");
var DebugControls = function () {
    // Redux
    var dispatch = react_redux_1.useDispatch();
    var badConnection = useTypedSelector_1.default(function (state) { return state.debug.badConnection; });
    var debugEnabled = useTypedSelector_1.default(function (state) { return state.debug.enabled; });
    // Callbacks
    var handleChange = function (e) {
        var checked = e.target.checked;
        dispatch(debug_1.debugActions.setBadConnection(checked));
    };
    var handleToggleControls = function () {
        dispatch(debug_1.debugActions.toggleEnabled());
    };
    // Close on escape key press
    useKeyPress_1.default('alt+ctrl+shift+/', handleToggleControls);
    if (!debugEnabled) {
        return null;
    }
    return (react_1.default.createElement(ui_1.Box, { padding: 4, style: {
            bottom: 0,
            left: 0,
            pointerEvents: 'none',
            position: 'fixed',
            width: '100%'
        } },
        react_1.default.createElement(ui_1.Flex, { align: "center" },
            react_1.default.createElement(ui_1.Box, { marginRight: 3 },
                react_1.default.createElement(ui_1.Text, { muted: true, size: 1 },
                    react_1.default.createElement(icons_1.PlugIcon, null))),
            react_1.default.createElement(ui_1.Tooltip, { content: react_1.default.createElement(ui_1.Box, { padding: 2 },
                    react_1.default.createElement(ui_1.Text, { muted: true, size: 1 }, badConnection
                        ? 'Bad connection: +3000ms & 50% chance to fail'
                        : 'No connection throttling')), fallbackPlacements: ['right', 'left'], placement: "bottom" },
                react_1.default.createElement(ui_1.Switch, { checked: badConnection, onChange: handleChange, style: {
                        pointerEvents: 'auto'
                    } })))));
};
exports.default = DebugControls;
//# sourceMappingURL=index.js.map