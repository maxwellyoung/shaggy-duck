"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = require("@sanity/color");
var icons_1 = require("@sanity/icons");
var ui_1 = require("@sanity/ui");
var react_1 = __importStar(require("react"));
var react_redux_1 = require("react-redux");
var styled_components_1 = __importStar(require("styled-components"));
var constants_1 = require("../../constants");
var AssetSourceDispatchContext_1 = require("../../contexts/AssetSourceDispatchContext");
var useKeyPress_1 = __importDefault(require("../../hooks/useKeyPress"));
var useTypedSelector_1 = __importDefault(require("../../hooks/useTypedSelector"));
var assets_1 = require("../../modules/assets");
var dialog_1 = require("../../modules/dialog");
var imageDprUrl_1 = __importDefault(require("../../utils/imageDprUrl"));
var typeGuards_1 = require("../../utils/typeGuards");
var FileIcon_1 = __importDefault(require("../FileIcon"));
var Image_1 = __importDefault(require("../Image"));
var CardWrapper = styled_components_1.default(ui_1.Flex)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  height: 100%;\n  overflow: hidden;\n  padding: 2px;\n  position: relative;\n  width: 100%;\n"], ["\n  height: 100%;\n  overflow: hidden;\n  padding: 2px;\n  position: relative;\n  width: 100%;\n"])));
var CardContainer = styled_components_1.default(ui_1.Flex)(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  border: 1px solid transparent;\n  height: 100%;\n  pointer-events: ", ";\n  position: relative;\n  transition: all 300ms;\n  user-select: none;\n  width: 100%;\n\n  border: ", ";\n\n  ", "\n"], ["\n  border: 1px solid transparent;\n  height: 100%;\n  pointer-events: ", ";\n  position: relative;\n  transition: all 300ms;\n  user-select: none;\n  width: 100%;\n\n  border: ",
    ";\n\n  ",
    "\n"])), function (props) { return (props.updating ? 'none' : 'auto'); }, function (props) {
    return props.picked
        ? "1px solid " + props.theme.sanity.color.spot.orange + " !important"
        : '1px solid inherit';
}, function (props) {
    return !props.updating && styled_components_1.css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n      @media (hover: hover) and (pointer: fine) {\n        &:hover {\n          border: 1px solid ", ";\n        }\n      }\n    "], ["\n      @media (hover: hover) and (pointer: fine) {\n        &:hover {\n          border: 1px solid ", ";\n        }\n      }\n    "])), color_1.hues.gray[500].hex);
});
var ContextActionContainer = styled_components_1.default(ui_1.Flex)(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  cursor: ", ";\n  height: ", "px;\n  transition: all 300ms;\n\n  @media (hover: hover) and (pointer: fine) {\n    &:hover {\n      background: ", ";\n    }\n  }\n"], ["\n  cursor: ", ";\n  height: ", "px;\n  transition: all 300ms;\n\n  @media (hover: hover) and (pointer: fine) {\n    &:hover {\n      background: ", ";\n    }\n  }\n"])), function (props) { return (props.selected ? 'default' : 'pointer'); }, constants_1.PANEL_HEIGHT, color_1.hues.gray[950].hex);
var StyledWarningOutlineIcon = styled_components_1.default(icons_1.WarningFilledIcon)(function (_a) {
    var theme = _a.theme;
    return {
        color: theme.sanity.color.spot.red
    };
});
var CardAsset = function (props) {
    var _a, _b;
    var id = props.id, selected = props.selected;
    // Refs
    var shiftPressed = useKeyPress_1.default('shift');
    // Redux
    var dispatch = react_redux_1.useDispatch();
    var lastPicked = useTypedSelector_1.default(function (state) { return state.assets.lastPicked; });
    var item = useTypedSelector_1.default(function (state) { return assets_1.selectAssetById(state, id); });
    var asset = item === null || item === void 0 ? void 0 : item.asset;
    var error = item === null || item === void 0 ? void 0 : item.error;
    var isOpaque = (_b = (_a = item === null || item === void 0 ? void 0 : item.asset) === null || _a === void 0 ? void 0 : _a.metadata) === null || _b === void 0 ? void 0 : _b.isOpaque;
    var picked = item === null || item === void 0 ? void 0 : item.picked;
    var updating = item === null || item === void 0 ? void 0 : item.updating;
    var onSelect = AssetSourceDispatchContext_1.useAssetSourceActions().onSelect;
    // Short circuit if no asset is available
    if (!asset) {
        return null;
    }
    // Callbacks
    var handleAssetClick = function (e) {
        e.stopPropagation();
        if (onSelect) {
            onSelect([
                {
                    kind: 'assetDocumentId',
                    value: asset._id
                }
            ]);
        }
        else if (shiftPressed.current) {
            if (picked) {
                dispatch(assets_1.assetsActions.pick({ assetId: asset._id, picked: !picked }));
            }
            else {
                dispatch(assets_1.assetsActions.pickRange({ startId: lastPicked || asset._id, endId: asset._id }));
            }
        }
        else {
            dispatch(dialog_1.dialogActions.showAssetEdit({ assetId: asset._id }));
        }
    };
    var handleContextActionClick = function (e) {
        e.stopPropagation();
        if (onSelect) {
            dispatch(dialog_1.dialogActions.showAssetEdit({ assetId: asset._id }));
        }
        else if (shiftPressed.current && !picked) {
            dispatch(assets_1.assetsActions.pickRange({ startId: lastPicked || asset._id, endId: asset._id }));
        }
        else {
            dispatch(assets_1.assetsActions.pick({ assetId: asset._id, picked: !picked }));
        }
    };
    var opacityContainer = updating ? 0.5 : 1;
    var opacityPreview = selected || updating ? 0.25 : 1;
    return (react_1.default.createElement(CardWrapper, null,
        react_1.default.createElement(CardContainer, { direction: "column", picked: picked, updating: item.updating },
            react_1.default.createElement(ui_1.Box, { flex: 1, style: {
                    cursor: selected ? 'default' : 'pointer',
                    position: 'relative'
                } },
                react_1.default.createElement("div", { onClick: handleAssetClick, style: { height: '100%', opacity: opacityPreview } },
                    typeGuards_1.isFileAsset(asset) && react_1.default.createElement(FileIcon_1.default, { extension: asset.extension, width: "80px" }),
                    typeGuards_1.isImageAsset(asset) && (react_1.default.createElement(Image_1.default, { draggable: false, showCheckerboard: !isOpaque, src: imageDprUrl_1.default(asset, { height: 250, width: 250 }), style: {
                            draggable: false,
                            transition: 'opacity 1000ms'
                        } }))),
                selected && !updating && (react_1.default.createElement(ui_1.Flex, { align: "center", justify: "center", style: {
                        height: '100%',
                        left: 0,
                        opacity: opacityContainer,
                        position: 'absolute',
                        top: 0,
                        width: '100%'
                    } },
                    react_1.default.createElement(ui_1.Text, { size: 2 },
                        react_1.default.createElement(icons_1.CheckmarkCircleIcon, null)))),
                updating && (react_1.default.createElement(ui_1.Flex, { align: "center", justify: "center", style: {
                        height: '100%',
                        left: 0,
                        position: 'absolute',
                        top: 0,
                        width: '100%'
                    } },
                    react_1.default.createElement(ui_1.Spinner, null)))),
            react_1.default.createElement(ContextActionContainer, { align: "center", onClick: handleContextActionClick, paddingX: 1, style: { opacity: opacityContainer } },
                onSelect ? (react_1.default.createElement(icons_1.EditIcon, { style: {
                        flexShrink: 0,
                        opacity: 0.5
                    } })) : (react_1.default.createElement(ui_1.Checkbox, { checked: picked, readOnly: true, style: {
                        flexShrink: 0,
                        pointerEvents: 'none',
                        transform: 'scale(0.8)'
                    } })),
                react_1.default.createElement(ui_1.Box, { marginLeft: 2 },
                    react_1.default.createElement(ui_1.Text, { muted: true, size: 0, textOverflow: "ellipsis" }, asset.originalFilename))),
            error && (react_1.default.createElement(ui_1.Box, { padding: 3, style: {
                    position: 'absolute',
                    right: 0,
                    top: 0
                } },
                react_1.default.createElement(ui_1.Tooltip, { content: react_1.default.createElement(ui_1.Container, { padding: 2, width: 0 },
                        react_1.default.createElement(ui_1.Text, { size: 1 }, error)), placement: "left", portal: true },
                    react_1.default.createElement(ui_1.Text, { size: 1 },
                        react_1.default.createElement(StyledWarningOutlineIcon, { color: "critical" }))))))));
};
exports.default = react_1.memo(CardAsset);
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
//# sourceMappingURL=index.js.map