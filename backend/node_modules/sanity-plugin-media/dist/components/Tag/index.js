"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = require("@sanity/color");
var icons_1 = require("@sanity/icons");
var ui_1 = require("@sanity/ui");
var react_1 = __importDefault(require("react"));
var react_redux_1 = require("react-redux");
var styled_components_1 = __importDefault(require("styled-components"));
var searchFacets_1 = require("../../config/searchFacets");
var constants_1 = require("../../constants");
var useTypedSelector_1 = __importDefault(require("../../hooks/useTypedSelector"));
var assets_1 = require("../../modules/assets");
var dialog_1 = require("../../modules/dialog");
var search_1 = require("../../modules/search");
var TagContainer = styled_components_1.default(ui_1.Flex)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  height: ", "px;\n  width: 100%;\n"], ["\n  height: ", "px;\n  width: 100%;\n"])), constants_1.PANEL_HEIGHT);
var ButtonContainer = styled_components_1.default(ui_1.Flex)(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  @media (pointer: fine) {\n    visibility: hidden;\n  }\n\n  @media (hover: hover) and (pointer: fine) {\n    ", ":hover & {\n      visibility: visible;\n    }\n  }\n"], ["\n  @media (pointer: fine) {\n    visibility: hidden;\n  }\n\n  @media (hover: hover) and (pointer: fine) {\n    ", ":hover & {\n      visibility: visible;\n    }\n  }\n"])), TagContainer);
var TagButton = function (props) {
    var disabled = props.disabled, icon = props.icon, onClick = props.onClick, tone = props.tone, tooltip = props.tooltip;
    return (react_1.default.createElement(ui_1.Tooltip, { content: react_1.default.createElement(ui_1.Container, { padding: 2, width: 0 },
            react_1.default.createElement(ui_1.Text, { muted: true, size: 1 }, tooltip)), disabled: 'ontouchstart' in window, placement: "top", portal: true },
        react_1.default.createElement(ui_1.Button, { disabled: disabled, fontSize: 1, icon: icon, mode: "bleed", onClick: onClick, padding: 2, tone: tone })));
};
var Tag = function (props) {
    var _a, _b;
    var actions = props.actions, tag = props.tag;
    // Redux
    var dispatch = react_redux_1.useDispatch();
    var assetsPicked = useTypedSelector_1.default(assets_1.selectAssetsPicked);
    var hasSearchFacetTag = useTypedSelector_1.default(search_1.selectHasSearchFacetTag);
    var isSearchFacetTag = useTypedSelector_1.default(function (state) { var _a; return search_1.selectIsSearchFacetTag(state, (_a = tag === null || tag === void 0 ? void 0 : tag.tag) === null || _a === void 0 ? void 0 : _a._id); });
    // Callbacks
    var handleSearchFacetTagRemove = function () {
        dispatch(search_1.searchActions.facetsRemove({ facetName: 'tag' }));
    };
    var handleShowAddTagToAssetsDialog = function () {
        dispatch(dialog_1.dialogActions.showConfirmAssetsTagAdd({ assetsPicked: assetsPicked, tag: tag.tag }));
    };
    var handleShowRemoveTagFromAssetsDialog = function () {
        dispatch(dialog_1.dialogActions.showConfirmAssetsTagRemove({ assetsPicked: assetsPicked, tag: tag.tag }));
    };
    var handleShowTagDeleteDialog = function () {
        dispatch(dialog_1.dialogActions.showConfirmDeleteTag({ tag: tag.tag }));
    };
    var handleShowTagEditDialog = function () {
        var _a;
        dispatch(dialog_1.dialogActions.showTagEdit({ tagId: (_a = tag === null || tag === void 0 ? void 0 : tag.tag) === null || _a === void 0 ? void 0 : _a._id }));
    };
    var handleSearchFacetTagAddOrUpdate = function () {
        var _a, _b, _c;
        var searchFacet = __assign(__assign({}, searchFacets_1.inputs.tag), { value: {
                label: (_b = (_a = tag === null || tag === void 0 ? void 0 : tag.tag) === null || _a === void 0 ? void 0 : _a.name) === null || _b === void 0 ? void 0 : _b.current,
                value: (_c = tag === null || tag === void 0 ? void 0 : tag.tag) === null || _c === void 0 ? void 0 : _c._id
            } });
        if (hasSearchFacetTag) {
            dispatch(search_1.searchActions.facetsUpdate({
                name: 'tag',
                operatorType: 'references',
                value: searchFacet.value
            }));
        }
        else {
            dispatch(search_1.searchActions.facetsAdd({ facet: searchFacet }));
        }
    };
    return (react_1.default.createElement(TagContainer, { align: "center", justify: "space-between", paddingLeft: 3 },
        react_1.default.createElement(ui_1.Box, { flex: 1 },
            react_1.default.createElement(ui_1.Text, { size: 1, style: {
                    color: (tag === null || tag === void 0 ? void 0 : tag.updating) ? color_1.hues.gray[800].hex : color_1.hues.gray[500].hex,
                    userSelect: 'none'
                }, textOverflow: "ellipsis" }, (_b = (_a = tag === null || tag === void 0 ? void 0 : tag.tag) === null || _a === void 0 ? void 0 : _a.name) === null || _b === void 0 ? void 0 : _b.current)),
        react_1.default.createElement(ButtonContainer, { align: "center", style: { flexShrink: 0 } },
            (actions === null || actions === void 0 ? void 0 : actions.includes('search')) && (react_1.default.createElement(TagButton, { disabled: tag === null || tag === void 0 ? void 0 : tag.updating, icon: isSearchFacetTag ? icons_1.CloseIcon : icons_1.SearchIcon, onClick: isSearchFacetTag ? handleSearchFacetTagRemove : handleSearchFacetTagAddOrUpdate, tooltip: isSearchFacetTag ? 'Remove filter' : 'Filter by tag' })),
            (actions === null || actions === void 0 ? void 0 : actions.includes('edit')) && (react_1.default.createElement(TagButton, { disabled: tag === null || tag === void 0 ? void 0 : tag.updating, icon: icons_1.EditIcon, onClick: handleShowTagEditDialog, tone: "primary", tooltip: "Edit tag" })),
            (actions === null || actions === void 0 ? void 0 : actions.includes('applyAll')) && (react_1.default.createElement(TagButton, { disabled: tag === null || tag === void 0 ? void 0 : tag.updating, icon: icons_1.ArrowUpIcon, onClick: handleShowAddTagToAssetsDialog, tone: "primary", tooltip: "Add tag to selected assets" })),
            (actions === null || actions === void 0 ? void 0 : actions.includes('removeAll')) && (react_1.default.createElement(TagButton, { disabled: tag === null || tag === void 0 ? void 0 : tag.updating, icon: icons_1.ArrowDownIcon, onClick: handleShowRemoveTagFromAssetsDialog, tone: "critical", tooltip: "Remove tag from selected assets" })),
            (actions === null || actions === void 0 ? void 0 : actions.includes('delete')) && (react_1.default.createElement(TagButton, { disabled: tag === null || tag === void 0 ? void 0 : tag.updating, icon: icons_1.TrashIcon, onClick: handleShowTagDeleteDialog, tone: "critical", tooltip: "Delete tag" })))));
};
exports.default = Tag;
var templateObject_1, templateObject_2;
//# sourceMappingURL=index.js.map