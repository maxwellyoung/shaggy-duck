"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = require("react");
var useOnScreen = function (ref, options, once) {
    if (options === void 0) { options = {}; }
    var _a = __read(react_1.useState(false), 2), isIntersecting = _a[0], setIntersecting = _a[1];
    react_1.useEffect(function () {
        var observer = new IntersectionObserver(function (_a) {
            var _b = __read(_a, 1), entry = _b[0];
            // Update state when observer callback fires
            setIntersecting(entry.isIntersecting);
            // Stop observing
            if (once && entry.isIntersecting) {
                if (ref.current && observer) {
                    observer.unobserve(ref.current);
                }
            }
        }, options);
        if (ref.current && observer) {
            observer.observe(ref.current);
        }
        // Stop observing on unmount
        return function () {
            if (ref.current && observer) {
                observer.unobserve(ref.current);
            }
        };
    }, []);
    return isIntersecting;
};
exports.default = useOnScreen;
//# sourceMappingURL=useOnScreen.js.map