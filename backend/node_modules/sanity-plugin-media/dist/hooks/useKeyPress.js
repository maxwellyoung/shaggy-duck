"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var is_hotkey_1 = __importDefault(require("is-hotkey"));
var react_1 = require("react");
var useKeyPress = function (hotkey, onPress) {
    var keyPressed = react_1.useRef(false);
    // If pressed key is our target key then set to true
    function downHandler(e) {
        if (is_hotkey_1.default(hotkey, e)) {
            keyPressed.current = true;
            if (onPress) {
                onPress();
            }
        }
    }
    // If released key is our target key then set to false
    var upHandler = function () {
        keyPressed.current = false;
    };
    // Add event listeners
    react_1.useEffect(function () {
        window.addEventListener('keydown', downHandler);
        window.addEventListener('keyup', upHandler);
        // Remove event listeners on cleanup
        return function () {
            window.removeEventListener('keydown', downHandler);
            window.removeEventListener('keyup', upHandler);
        };
    }, []); // Empty array ensures that effect is only run on mount and unmount
    return keyPressed;
};
exports.default = useKeyPress;
//# sourceMappingURL=useKeyPress.js.map