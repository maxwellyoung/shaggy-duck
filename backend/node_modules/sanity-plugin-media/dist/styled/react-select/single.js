"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
Object.defineProperty(exports, "__esModule", { value: true });
exports.reactSelectComponents = exports.reactSelectStyles = void 0;
var color_1 = require("@sanity/color");
var icons_1 = require("@sanity/icons");
var ui_1 = require("@sanity/ui");
var react_1 = __importDefault(require("react"));
var react_select_1 = require("react-select");
var react_virtuoso_1 = require("react-virtuoso");
var themeDarkPrimaryBlue = (_d = (_c = (_b = (_a = ui_1.studioTheme === null || ui_1.studioTheme === void 0 ? void 0 : ui_1.studioTheme.color) === null || _a === void 0 ? void 0 : _a.dark) === null || _b === void 0 ? void 0 : _b.primary) === null || _c === void 0 ? void 0 : _c.spot) === null || _d === void 0 ? void 0 : _d.blue;
var themeDarkDefaultBaseBg = (_h = (_g = (_f = (_e = ui_1.studioTheme === null || ui_1.studioTheme === void 0 ? void 0 : ui_1.studioTheme.color) === null || _e === void 0 ? void 0 : _e.dark) === null || _f === void 0 ? void 0 : _f.default) === null || _g === void 0 ? void 0 : _g.base) === null || _h === void 0 ? void 0 : _h.bg;
var themeRadius = ui_1.studioTheme === null || ui_1.studioTheme === void 0 ? void 0 : ui_1.studioTheme.radius;
var themeSpace = ui_1.studioTheme === null || ui_1.studioTheme === void 0 ? void 0 : ui_1.studioTheme.space;
var themeTextSizes = (_k = (_j = ui_1.studioTheme === null || ui_1.studioTheme === void 0 ? void 0 : ui_1.studioTheme.fonts) === null || _j === void 0 ? void 0 : _j.text) === null || _k === void 0 ? void 0 : _k.sizes;
exports.reactSelectStyles = {
    control: function (styles, _a) {
        var isDisabled = _a.isDisabled, isFocused = _a.isFocused;
        var boxShadow = "inset 0 0 0 1px " + color_1.hues.gray[900].hex;
        if (isFocused) {
            boxShadow = "inset 0 0 0 1px " + color_1.hues.gray[900].hex + ", 0 0 0 1px var(--card-bg-color), 0 0 0 3px var(--card-focus-ring-color) !important";
        }
        return __assign(__assign({}, styles), { backgroundColor: themeDarkDefaultBaseBg, color: color_1.white.hex, border: 'none', borderRadius: themeRadius[2], boxShadow: boxShadow, fontSize: themeTextSizes[1].fontSize, minHeight: '25px', opacity: isDisabled ? 0.5 : 'inherit', outline: 'none', transition: 'none', '&:hover': {
                boxShadow: "inset 0 0 0 1px " + ui_1.studioTheme.color.dark.default.input.default.hovered.border
            } });
    },
    input: function (styles) { return (__assign(__assign({}, styles), { color: color_1.white.hex, marginLeft: themeSpace[2] })); },
    menuList: function (styles) { return (__assign(__assign({}, styles), { padding: 0 })); },
    noOptionsMessage: function (styles) { return (__assign(__assign({}, styles), { fontSize: themeTextSizes[1].fontSize, lineHeight: '1em' })); },
    option: function (styles, _a) {
        var isFocused = _a.isFocused;
        return (__assign(__assign({}, styles), { backgroundColor: isFocused ? themeDarkPrimaryBlue : 'transparent', borderRadius: themeRadius[2], color: isFocused ? color_1.black.hex : 'inherit', fontSize: themeTextSizes[1].fontSize, lineHeight: '1em', padding: '4px 6px', '&:hover': {
                backgroundColor: themeDarkPrimaryBlue,
                color: color_1.black.hex
            } }));
    },
    placeholder: function (styles) { return (__assign(__assign({}, styles), { marginLeft: themeSpace[2], paddingBottom: '2px' })); },
    singleValue: function (styles) { return (__assign(__assign({}, styles), { color: color_1.white.hex, lineHeight: '1em', paddingBottom: '1px' })); },
    valueContainer: function (styles) { return (__assign(__assign({}, styles), { margin: 0, padding: 0 })); }
};
var ClearIndicator = function (props) {
    return (react_1.default.createElement(react_select_1.components.ClearIndicator, __assign({}, props),
        react_1.default.createElement(ui_1.Box, { paddingRight: 1, style: {
                transform: 'scale(0.85)'
            } },
            react_1.default.createElement(ui_1.Text, { muted: true, size: 0 },
                react_1.default.createElement(icons_1.CloseIcon, null)))));
};
var Menu = function (props) {
    return (react_1.default.createElement(react_select_1.components.Menu, __assign({}, props),
        react_1.default.createElement(ui_1.Card, { radius: 1, shadow: 2 }, props.children)));
};
var MenuList = function (props) {
    var children = props.children;
    var MAX_ROWS = 5;
    var OPTION_HEIGHT = 33;
    if (Array.isArray(children)) {
        var height = children.length > MAX_ROWS ? OPTION_HEIGHT * MAX_ROWS : children.length * OPTION_HEIGHT;
        return (react_1.default.createElement(react_virtuoso_1.Virtuoso, { className: "media__custom-scrollbar", itemContent: function (index) {
                var item = children[index];
                return react_1.default.createElement(Option, __assign({}, item.props));
            }, style: { height: height }, totalCount: children.length }));
    }
    return react_1.default.createElement(react_select_1.components.MenuList, __assign({}, props), children);
};
var NoOptionsMessage = function (props) {
    return react_1.default.createElement(react_select_1.components.NoOptionsMessage, __assign({}, props), props.children);
};
var Option = function (props) {
    return (react_1.default.createElement(ui_1.Box, { padding: 1 },
        react_1.default.createElement(react_select_1.components.Option, __assign({}, props),
            react_1.default.createElement(ui_1.Box, { paddingY: 1 },
                react_1.default.createElement(ui_1.Text, { size: 1, style: { color: 'inherit' }, textOverflow: "ellipsis" }, props.children)))));
};
var SingleValue = function (props) {
    return (react_1.default.createElement(react_select_1.components.SingleValue, __assign({}, props),
        react_1.default.createElement(ui_1.Box, { paddingLeft: 2 },
            react_1.default.createElement(ui_1.Text, { size: 1, style: {
                    color: 'inherit',
                    lineHeight: '2em' // HACK: prevent text descenders from cropping
                }, textOverflow: "ellipsis" }, props.children))));
};
exports.reactSelectComponents = {
    ClearIndicator: ClearIndicator,
    DropdownIndicator: null,
    IndicatorSeparator: null,
    Menu: Menu,
    MenuList: MenuList,
    NoOptionsMessage: NoOptionsMessage,
    Option: Option,
    SingleValue: SingleValue
};
//# sourceMappingURL=single.js.map