import React from 'react';
import { BehaviorSubject, Subscription } from 'rxjs';
import { Asset, AssetDocument, SanityDocument, UnsplashPhoto } from '../types';
declare type Props = {
    onSelect: (assets: Asset[]) => void;
    onClose: () => void;
    selectedAssets?: AssetDocument[];
    selectionType: 'single' | 'multiple';
    document?: SanityDocument;
};
declare type State = {
    query: string;
    searchResults: UnsplashPhoto[][];
    page: number;
    isLoading: boolean;
    cursor: number;
};
export default class UnsplashAssetSource extends React.Component<Props, State> {
    static defaultProps: {
        selectedAssets: undefined;
    };
    state: {
        cursor: number;
        query: string;
        page: number;
        searchResults: never[][];
        isLoading: boolean;
    };
    searchSubscription: Subscription | null;
    searchSubject$: BehaviorSubject<string>;
    pageSubject$: BehaviorSubject<number>;
    componentDidMount(): void;
    componentWillUnmount(): void;
    handleSelect: (photo: UnsplashPhoto) => Promise<void>;
    handleClose: () => void;
    handleSearchTermChanged: (event: React.ChangeEvent<HTMLInputElement>) => void;
    handleScollerLoadMore: () => void;
    handleKeyDown: (event: any) => void;
    getPhotos(): never[];
    updateCursor: (photo: UnsplashPhoto) => void;
    renderImage: (props: any) => JSX.Element;
    render(): JSX.Element;
}
export {};
