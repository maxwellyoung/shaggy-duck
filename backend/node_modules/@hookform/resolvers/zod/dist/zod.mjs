import{transformToNestObject as r,appendErrors as e}from"react-hook-form";import{convertArrayToPathName as o}from"@hookform/resolvers";function t(){return(t=Object.assign||function(r){for(var e=1;e<arguments.length;e++){var o=arguments[e];for(var t in o)Object.prototype.hasOwnProperty.call(o,t)&&(r[t]=o[t])}return r}).apply(this,arguments)}var s=function(r,s){return r.isEmpty?{}:r.errors.reduce(function(r,n){var a,c,u,i=n.path,f=n.message,p=n.code,m=o(i);return t({},r,i?r[m]&&s?((a={})[m]=e(m,s,r,p,f),a):((u={})[m]=r[m]||t({message:f,type:p},s?{types:(c={},c[p]=f||!0,c)}:{}),u):{})},{})},n=function(e,o){return function(t,n,a){void 0===a&&(a=!1);try{var c=e.safeParse(t,o);return Promise.resolve(c.success?{values:c.data,errors:{}}:{values:{},errors:r(s(c.error,a))})}catch(r){return Promise.reject(r)}}};export{n as zodResolver};
//# sourceMappingURL=zod.module.js.map
