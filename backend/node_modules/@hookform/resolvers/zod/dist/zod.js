var r=require("react-hook-form"),e=require("@hookform/resolvers");function o(){return(o=Object.assign||function(r){for(var e=1;e<arguments.length;e++){var o=arguments[e];for(var t in o)Object.prototype.hasOwnProperty.call(o,t)&&(r[t]=o[t])}return r}).apply(this,arguments)}var t=function(t,s){return t.isEmpty?{}:t.errors.reduce(function(t,a){var n,c,u,i=a.path,v=a.message,f=a.code,p=e.convertArrayToPathName(i);return o({},t,i?t[p]&&s?((n={})[p]=r.appendErrors(p,s,t,f,v),n):((u={})[p]=t[p]||o({message:v,type:f},s?{types:(c={},c[f]=v||!0,c)}:{}),u):{})},{})};exports.zodResolver=function(e,o){return function(s,a,n){void 0===n&&(n=!1);try{var c=e.safeParse(s,o);return Promise.resolve(c.success?{values:c.data,errors:{}}:{values:{},errors:r.transformToNestObject(t(c.error,n))})}catch(r){return Promise.reject(r)}}};
//# sourceMappingURL=zod.js.map
